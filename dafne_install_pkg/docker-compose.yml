version: "3.1"
services:
  fe:
    image: "collaborativedhs/dafne:fe-3.0.2"
    #container_name: fe
    hostname: frontend
    #restart: always
    #build: .
    ports:
      - "8080:80"
    volumes:
      - dafne-fe-config:/usr/local/apache2/htdocs/assets/config
      # uncomment the following line in case of deployment without proxy
      - /var/lib/docker/volumes/dafne-fe-html/_data/index.html:/usr/local/apache2/htdocs/index.html
    depends_on:
      - be
  be:
    image: "collaborativedhs/dafne:be-3.0.1"
    #container_name: be
    hostname: backend
    #restart: always
    #build: .
    command: bash -c "npx sequelize-cli db:migrate && node index.js"

    ports:
      - "3000:2000"
    environment:
      - NODE_ENV=production               # {'development', 'test', 'production'}
      - CONF_PATH=/usr/src/app/config/
      - LOGS_PATH=/usr/src/app/logs/
    volumes:
      # create a 'config' folder in the working dir and bind it to an external folder of the host, where the config.json file is located
      - dafne-be-config:/usr/src/app/config
      # create a 'log' folder in the working dir and binds it to an external folder of the host, to make the logs persistent
      - dafne-be-logs:/usr/src/app/logs
  # uncomment the following lines to use a dockerized image of the DAFNE database
    depends_on:
      - db
  db:
    #container_name: db
    hostname: dafne_db
    #restart: always
    image: "library/postgres:12.5"
    env_file:
      - /var/lib/docker/volumes/dafne-be-config/_data/db_credentials.env
    ports:
      - "5432:5432"
    volumes:
      - dafne-db:/var/lib/postgresql/data
volumes:
  dafne-fe-config:
     external: true
  dafne-be-config:
     external: true
  dafne-be-logs:
     external: true
  dafne-db:
     external: true

networks:
  default:
    external:
      name: collnetwork
