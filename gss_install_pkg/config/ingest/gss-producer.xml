<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<!-- This file is used to configure an ingester in producer mode scanning products from a DHuS OData v4 endpoint. -->
<!-- Mandatory parameters will be commented with a [M], optional ones with a [0] -->

<conf:configuration xmlns:conf="fr:gael:gss:ingest:configuration"
   xmlns:ingester="fr:gael:gss:ingest:ingester" xmlns:ds="fr:gael:gss:core:datastore"
   xmlns:ms="fr:gael:gss:core:metadatastore">

   <!-- [M] Access to the PostgreSQL database -->
   <!-- The attribute poolSize is optional (default 10) and is the max opened connection to the database -->
   <conf:database jdbcUrl="jdbc:postgresql://postgres:5432/postgres" login="postgres" password="password"
      poolSize="2" />

   <!-- [M] Define the ingesters. In this scenario, there is only one producer that will scan a DHuS -->
   <conf:ingesters>
      <ingester:ingester xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:type="ingester:kafkaIngesterProducerConf" name="dhus-producer">
         <!-- [M] comma separated kafka nodes (1 to n nodes) -->
         <ingester:hosts>kafka-1:9092,kafka-2:9092</ingester:hosts>
         <!-- [M] name of the kafka topic where produced messages will be sent -->
         <ingester:topic>dhus-ingestion</ingester:topic>
         <!-- [M] Frequency of the source scan in seconds. Default is 60. -->
         <ingester:pushInterval>10</ingester:pushInterval>
         <!-- [0] Only produce messages for products matching a regular expression -->
         <ingester:filter>.*</ingester:filter>

         <!-- [M] OData source configuration (elements can appear in any order) -->
         <ingester:source xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:type="ingester:producerOdataConf">
            <!-- [M] Url of the OData endpoint -->
            <ingester:serviceRootUrl>https://scihub.copernicus.eu/dhus/odata/v2</ingester:serviceRootUrl>
            <!--Â [0] Use basic auth to connect to the OData endpoint -->
            <ingester:auth type="basic">
               <!-- [M] User name -->
               <ingester:user>***</ingester:user>
               <!-- [M] User password -->
               <ingester:password>***</ingester:password>
            </ingester:auth>
            <!-- [0] How many products to take at each scan, default is 10 -->
            <ingester:top>3</ingester:top>
            <!-- [0] product published after this date will be selected -->
            <ingester:lastPublicationDate>2023-03-01T00:00:00.000Z</ingester:lastPublicationDate>
            <!-- [0] OData filter to apply to select products -->
            <ingester:filter>Online eq true</ingester:filter>
            <!-- [M] Type of OData endpoint (can be dhus or csc) -->
            <ingester:type>dhus</ingester:type>
            <!-- [0] If you know the format of the source products, you can set it here. It will avoid making requests to the DhuS -->
            <!-- instance to discover products format and make the producer run faster  -->
            <!-- <ingester:assumedFormat>.zip</ingester:assumedFormat> -->
            <!-- [0] if true, use the lastPublicationDate saved in db if not null (search by ingester name). Default is true -->
            <ingester:useDateFromDb>true</ingester:useDateFromDb>
            <!-- [0] if true, try to get the quicklook from the source. Default is false -->
            <ingester:fetchQuicklook>true</ingester:fetchQuicklook>
         </ingester:source>
      </ingester:ingester>
   </conf:ingesters>
</conf:configuration>
